/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package quotes.reader;

import java.io.FileNotFoundException;
import java.sql.SQLOutput;
import java.util.NoSuchElementException;

public class App {
    public static void main(String[] args) {
        QuotesReader qr;
        String quote = null;
        try {
            //Make a new instance of the QuoteReader class
            qr = new QuotesReader("src/main/resources/recentquotes.json");
        } catch (FileNotFoundException e) {
            System.out.println("Quotes input file not found.");
            return;
        }

        // check if args are 0, if it is, will just run code to get a random quote
        if (args.length == 0) {
            quote = qr.getQuotation().prettyPrint();
        } else if (args[0].equals("author")) {
            try {
                quote = qr.getQuotation(args[1], null, null).prettyPrint();
            } catch (NoSuchElementException e) {
                System.out.printf("No quotes found by author %s\n", args[0]);
                return;
            }
        } else if (args[0].equals("contains")) {
            try {
                quote = qr.getQuotation(null, null, args[1]).prettyPrint();
            } catch (NoSuchElementException e) {
                System.out.printf("No quotes found containing the word %s\n", args[1]);
                return;
            }
        } else if (args[0].equals("tag")) {
            try {
                quote = qr.getQuotation(null, args[1], null).prettyPrint();
            } catch (NoSuchElementException e) {
                System.out.printf("No quotes found containing the tag %s\n", args[1]);
                return;
            }
        } else if (args[0].equals("help")) {
            System.out.println("Returns a random quote from our curated list of quotes.");
            System.out.println("Arguments: author [author-name]");
            System.out.println("Arguments: contains [word]");
            System.out.println("Arguments: tag [tag]");
            return;
        }

        if (quote == null) System.out.printf("%s is not a valid argument. Type help to see arguments.", args[0]);
        else {
            AnimalWriter aw = new AnimalWriter(System.out, 50);
            aw.fishSay(quote);
        }
    }
}